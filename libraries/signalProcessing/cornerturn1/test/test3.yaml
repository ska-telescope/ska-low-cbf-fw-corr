integration_start: 11
sim_frames : 1
polynomials:
  # each entry is for a particular virtual channel
  0:
    virtual_channel : 0
    # polynomial coefficients c0 to c5, result = c0 + c1*t + ... + c5*t^5
    # Units of ns/s^k
     
    poly0 : [-355, 0, 0, 0, 0, 0]
    # sky frequency in GHz
    sky_freq0 : 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset0 : 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset0 : 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration0 : 10
    valid0 : 1
    #
    poly1: [-355, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq1: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset1: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset1: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration1: 20
    valid1: 1
    
  1:
    virtual_channel : 1
    poly0: [ -191, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq0: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset0: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset0: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration0: 10
    valid0: 1
    #
    poly1: [ -191, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq1: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset1: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset1: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration1: 20
    valid1: 1

  2:
    virtual_channel : 2
    # polynomial coefficients c0 to c5, result = c0 + c1*t + ... + c5*t^5
    # Units of ns/s^k
    poly0: [ -152, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq0: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset0: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset0: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration0: 10
    valid0: 1
    #
    poly1: [ -152, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq1: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset1: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset1: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration1: 20
    valid1: 1
    
  3:
    virtual_channel : 3
    poly0: [ 150, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq0: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset0: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset0: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration0: 10
    valid0: 1
    #
    poly1: [ 150, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq1: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset1: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset1: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration1: 20
    valid1: 1
  
  4:
    virtual_channel : 4
    # polynomial coefficients c0 to c5, result = c0 + c1*t + ... + c5*t^5
    # Units of ns/s^k
    poly0: [ 0, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq0: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset0: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset0: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration0: 10
    valid0: 1
    #
    poly1: [ 0, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq1: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset1: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset1: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration1: 20
    valid1: 1
    
  5:
    virtual_channel : 5
    # polynomial coefficients c0 to c5, result = c0 + c1*t + ... + c5*t^5
    # Units of ns/s^k
    poly0: [ 1886, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq0: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset0: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset0: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration0: 10
    valid0: 1
    #
    poly1: [ 1886, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq1: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset1: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset1: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration1: 20
    valid1: 1
    
  6:
    virtual_channel : 6
    # polynomial coefficients c0 to c5, result = c0 + c1*t + ... + c5*t^5
    # Units of ns/s^k
    poly0: [ 0, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq0: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset0: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset0: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration0: 10
    valid0: 1
    #
    poly1: [ 0, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq1: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset1: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset1: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration1: 20
    valid1: 1
    
  7:
    virtual_channel : 7
    # polynomial coefficients c0 to c5, result = c0 + c1*t + ... + c5*t^5
    # Units of ns/s^k
    poly0: [ 0, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq0: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset0: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset0: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration0: 10
    valid0: 1
    #
    poly1: [ 0, 0, 0, 0, 0, 0 ]
    # sky frequency in GHz
    sky_freq1: 0.20
    #seconds from the polynomial epoch to the start of the integration period, as a double precision value 
    buf_offset1: 10
    # double precision offset in ns for the second polarisation (relative to the first polarisation). 
    Ypol_offset1: 0
    # Validity time : 32 bit buf_integration: Integration period at which the polynomial becomes valid.
    integration1: 20
    valid1: 1