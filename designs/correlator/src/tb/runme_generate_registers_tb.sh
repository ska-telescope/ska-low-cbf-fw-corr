# To convert command file generated by python model into a command file that can be used in the simulation
#quick hack for now, this should be autogenerated by the runme.sh script that automatically compiles the project now
#python3 ../../../../../tools/args/gen_tb_config.py -c cnic.ccfg -i registers.txt -o registers_tb.txt
#exit


# To convert command file generated by python model into a command file that can be used in the simulation
PERSONALITY="correlator"
echo -e
echo -e "Usage : $0 <fpga build directory>"
echo -e "assumes the file registers.txt exists in the current directory"
echo -e "Argument 1: Optionally Specify the fpga buld directory where  ${PERSONALITY}.ccfg is located  or leave out to select latest fpga build directory"
echo -

pushd ../../../../
export GITREPO=$(pwd)
echo -e "\nBase Git directory: $GITREPO"
PRJ_DIR=$GITREPO/build/$PERSONALITY/ 
popd


if [ "$1" = "" ]; then
    echo -e "Assuming latest FPGA build directory to source ${PERSONALITY}.ccfg"
    cd $GITREPO/build/$PERSONALITY
    #Find the latest fpga build directory
    NEWEST_DIR=`ls -td *_build_* |head -n1 | tr -d '\n'`
    if [ -z $NEWEST_DIR ]; then
        echo "FAIL: Could not find the latest $PERSONALITY_build_ directory"
        exit 1
    fi
else
    NEWEST_DIR=$1
fi

echo -e "Using fpga build directory $NEWEST_DIR  to source ${PERSONALITY}.ccfg"



PRJ_DIR+=$NEWEST_DIR
echo 
echo -e "Using Vivado fpga build directory $PRJ_DIR  to source ${PERSONALITY}.ccfg"

# ccfg is now copied into build dir by runme.
#echo "Copying $PRJ_DIR/${PERSONALITY}.ccfg to ./"
#cp $PRJ_DIR/${PERSONALITY}.ccfg .

echo "Generating $1/registers_tb.txt for the testbench from $1/registers.txt"
python3 $GITREPO/tools/args/gen_tb_config.py -c $PRJ_DIR/${PERSONALITY}.ccfg -i $GITREPO/designs/${PERSONALITY}/src/tb/registers.txt -o registers_tbb.txt

#echo -e "Copy registers_tb.txt into the base of the repo for the simulator to reference."
#cp registers_tb.txt $GITREPO


